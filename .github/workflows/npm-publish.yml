name: Publish Package

on:
  release:
    types:
      - released
  workflow_dispatch:

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare the source code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Node.js environment
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: lts/*
          cache: npm

      - name: Update npm
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Create tarball
        run: npm pack

      - name: Save tarball
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: package
          path: "*.tgz"
          retention-days: 1

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Set commit status to PENDING
        uses: myrotvorets/set-commit-status-action@7d7fe9a321fbe56a1339449c19422e95a025c65a # 1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: Publish to npm
          sha: ${{ github.sha }}

      - name: Set up Node.js environment
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          registry-url: https://registry.npmjs.org/

      - name: Download tarball
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # tag=v3
        with:
          name: package

      - name: Publish package
        run: npm publish *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@7d7fe9a321fbe56a1339449c19422e95a025c65a # 1.1.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Publish to npm
          sha: ${{ github.sha }}
        if: always()
